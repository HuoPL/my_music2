plugins {
    alias(libs.plugins.android.application)
}

apply from:'../common.gradle'

android {
    namespace 'com.hpl.my_music'
//    这里删掉是因为在common里面已经配置了
//    compileSdk 34

    defaultConfig {
        applicationId "com.hpl.my_music"
//        minSdk 24
//        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //渠道相关
        flavorDimensions "versionCode"
    }
    buildFeatures {
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
    viewBinding {
        //开启视图绑定，用来替代findViewById
        //官方文档：https://developer.android.com/topic/libraries/view-binding
        enabled = true
    }
    //配置不同的环境
    productFlavors {
        //本地开发环境
        local {
            //API端点
            buildConfigField('String', "ENDPOINT", '"http://192.168.2.108:8080/"')

            //资源端点
//            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"http://course-music-dev.ixuea.com/%s"'

            //新资源地址
            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"https://rs.ixuea.com/music/%s"'

            dimension = minSdkVersion
        }

        //开发环境
        dev {
            //API端点
            buildConfigField('String', "ENDPOINT", '"http://my-cloud-music-api-sp3-dev.ixuea.com/"')

            //新资源地址
            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"https://rs.ixuea.com/music/%s"'

            dimension = minSdkVersion
        }

        //正式环境
        prod {
            //API端点
            buildConfigField 'String', 'ENDPOINT', '"http://my-cloud-music-api-sp3.ixuea.com/"'

            //新资源地址
            buildConfigField 'String', 'RESOURCE_ENDPOINT', '"https://rs.ixuea.com/music/%s"'

            dimension = minSdkVersion
        }
    }
}

dependencies {


    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    //这个是官
    implementation libs.constraintlayout
    implementation libs.viewbinding
    //如果把这个implementation换成api   那么这个引入的还会传入到下一个模块
    implementation project(':super-j')
    testImplementation libs.junit//这个是测试java带代码的
    androidTestImplementation libs.ext.junit//这是测试安卓的
    androidTestImplementation libs.espresso.core//这个也是测安卓的
    //UI框架，主要是用他的工具类，也可以单独拷贝出来
    //https://qmuiteam.com/android/get-started
    implementation 'com.qmuiteam:qmui:2.0.1'
    //时间插件
    implementation 'joda-time:joda-time:2.10.10'

    //权限框架
    //https://github.com/guolindev/PermissionX
    implementation 'com.guolindev.permissionx:permissionx:1.7.1'

    //腾讯开源的高性能keyValue存储，用来替代系统的SharedPreferences
//https://github.com/Tencent/MMKV
    implementation 'com.tencent:mmkv-static:2.0.0'


    //圆形指示器
//https://github.com/ongakuer/CircleIndicator
    implementation 'me.relex:circleindicator:2.1.6'

    //region 请求网络相关
//提示：region这种语法是最新的，推荐使用这种，也更容易阅读，不建议在同一个文件同时使用
//因为可能会显示出错
//okhttp
//https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

//用来打印okhttp请求日志
//当然也可以自定义
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.3")

//retrofit
//https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

//使用gson解析json
//https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.9.0'

//适配retrofit使用gson解析
//版本要和retrofit一样
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

//适配retrofit支持rxjava
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

//使用了Android响应式编程
//RxJava和RxAndroid区别？
//简单来说：就是RxAndroid在RxJava的基础上
//优化了一些功能
//增强了Android特有的功能
//https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
//endregion

}